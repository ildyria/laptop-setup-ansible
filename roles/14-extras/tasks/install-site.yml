# code: language=ansible
---
- name: Fail if missing variables
  ansible.builtin.fail:
    msg: Bailing out. Make sure all variables are defined
  when: site_url is undefined
    or site_root_dir is undefined
    or site_public_dir is undefined
    or site_dir_conf is undefined
    or site_ssl_conf is undefined
    or site_cert_dir is undefined

- name: Add {{ site_url }} to host file
  become: true
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: '127.0.0.1 {{ site_url }}'
    state: present
    owner: root
    group: root
    mode: '0644'

- name: Generage certificate for {{ site_url }}
  become: true
  ansible.builtin.command:
    cmd: ./microca -domains {{ site_url }}
    chdir: '{{ microca_dir }}'
    creates: '{{ site_cert_dir }}'
  register: site_test_cert

- name: Fix access of {{ site_cert_dir }}
  become: true
  ansible.builtin.file:
    path: '{{ site_cert_dir }}'
    state: directory
    owner: '{{ linux_user }}'
    group: '{{ linux_user }}'
    mode: '0750'
    recurse: true
  when: site_test_cert is success

- name: Install {{ site_url }} private key
  become: true
  ansible.builtin.copy:
    src: '{{ site_cert_dir }}/key.pem'
    dest: '/etc/ssl/private/{{ site_url }}.key'
    mode: '0640'
  when: site_test_cert is success

- name: Install {{ site_url }} certificate
  become: true
  ansible.builtin.copy:
    src: '{{ site_cert_dir }}/cert.pem'
    dest: '/etc/ssl/certs/{{ site_url }}.pem'
    mode: '0777'
  when: site_test_cert is success

- name: Add {{ site_dir_conf }} to conf-available
  become: true
  ansible.builtin.template:
    src: 'apache2/conf-apache.conf.j2'
    dest: '/etc/apache2/conf-available/{{ site_dir_conf }}'
    mode: '0644'
  when: site_test_cert is success
  register: site_conf

- name: Enable conf {{ site_dir_conf }}
  become: true
  ansible.builtin.command:
    cmd: a2enconf {{ site_dir_conf }}
    creates: '/etc/apache2/conf-enabled/{{ site_dir_conf }}'
  when: site_conf is success
  notify: Restart apache2

- name: Add {{ site_ssl_conf }} to sites-available
  become: true
  ansible.builtin.template:
    src: 'apache2/site-ssl.conf.j2'
    dest: '/etc/apache2/sites-available/{{ site_ssl_conf }}'
    mode: '0644'
  when: site_test_cert is success
  register: setup_site

- name: Enable site {{ site_ssl_conf }}
  become: true
  ansible.builtin.command:
    cmd: a2ensite {{ site_ssl_conf }}
    creates: '/etc/apache2/sites-enabled/{{ site_ssl_conf }}'
  when: setup_site is success
  notify: Restart apache2
